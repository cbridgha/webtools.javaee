<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.jst.j2ee" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.jst.j2ee" id="ClasspathDependencyExtension" name="ClasspathDependencyExtension"/>
      </appInfo>
      <documentation>
         [Enter description of this extension point.]
      </documentation>
   </annotation>

   <include schemaLocation="schema://org.eclipse.core.expressions/schema/expressionLanguage.exsd"/>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
         <documentation>
            This extension is used by extenders to indicate if a particular project will handle the exporting of external jars referenced in the classpath.  It also allows the extender to provide the path or where the external jar will be located in an exported project.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="classpathdependency" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="classpathdependency">
      <annotation>
         <documentation>
            This element allows the extender to provide an enablement child element.  The enablement element allows the extender to indicate at a high level if this project applies to them.  If no enablement element is provided an enablement value of true is assumed.  The classpathdependency element also requires that a class attribute be specified.  See the description of this class attribute for more details.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="enablement" minOccurs="0" maxOccurs="1"/>
         </sequence>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  This class allows the extender to specify two things.

1) with the projectHandlesExport method the extender can verify in more detail if this project and classpath entry applies to them.  Returning true indicates that the project and classpath applies to their situation and mechanism is in place export externally referenced jar files.

2) with the getClasspathdependencyAttribute method the extender can indicate the location of an external jar file in an exported project.  If the extender wants the default WTP calculated path value then null should be returned.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.jst.j2ee.classpathdep.ClasspathDependencyExtension:"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
